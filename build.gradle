
apply plugin: 'java'
apply plugin: 'jacoco'

apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    mavenLocal()
    mavenCentral()
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'io.github.millij'
version = '3.2.1'


dependencies {

    // Main compile
    // ----------------------------------------------------------------------------------

    // Slf4j
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.3'

    // Apache Commons
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'

    // Apache POI
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.5'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.5'


    // Test compile
    // ----------------------------------------------------------------------------------

    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.19.0'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl', version: '2.19.0'

    testImplementation group: 'junit', name: 'junit', version: '4.12'

}

// Test
// ----------------------------------------------------------------------------

test {
    systemProperties 'property': 'value'
}


// Java
// ----------------------------------------------------------------------------

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}


// Signing

signing {
    sign configurations.archives
}



// JaCoCo
// ----------------------------------------------------------------------------

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

jacocoTestReport.dependsOn test

check.dependsOn jacocoTestReport


// CheckStyle
// ----------------------------------------------------------------------------



// Release
// ----------------------------------------------------------------------------

uploadArchives {

    repositories {
        mavenDeployer {

            // Sign Artifacts before deploying
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment) 
            }

            // Staging Repo
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            // Snapshot Repo
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }


            // Project Info to generate POM
            pom.project {
                name 'Object Mapper for Apache POI'
                packaging 'jar'
                description 'Objects mapper for Office formats - Excel files, Spreadsheets, etc. '
                url 'https://millij.github.io/poi-object-mapper/'

                scm {
                    url 'https://github.com/millij/poi-object-mapper.git'
                    connection 'scm:git:https://github.com/millij/poi-object-mapper.git'
                    developerConnection 'scm:git:https://github.com/millij/poi-object-mapper.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id 'millij'
                        name 'Gowri Shankar'
                        email 'gowrishankar.milli@gmail.com'
                    }
                }
            }   // POM

        }   // mavenDeployer

    }
}
